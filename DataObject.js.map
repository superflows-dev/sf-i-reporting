{"version":3,"file":"DataObject.js","sourceRoot":"","sources":["src/DataObject.ts"],"names":[],"mappings":"AAUA,MAAM,UAAU,gBAAgB,CAAC,OAAY,EAAE,IAAa;;IACxD,IAAG,IAAI,IAAI,IAAI,EAAC;QACZ,OAAM;YACF,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,IAAI,EAAE,MAAA,OAAO,CAAC,IAAI,mCAAI,EAAE;YACxB,IAAI,EAAE,MAAA,OAAO,CAAC,IAAI,mCAAI,EAAE;YACxB,KAAK,EAAE,MAAA,OAAO,CAAC,KAAK,mCAAI,EAAE;YAC1B,IAAI,EAAE,MAAA,OAAO,CAAC,IAAI,mCAAI,EAAE;YACxB,EAAE,EAAE,MAAA,OAAO,CAAC,EAAE,mCAAI,EAAE;YACpB,KAAK,EAAE,MAAA,OAAO,CAAC,KAAK,mCAAI,EAAE;SAC7B,CAAA;KACJ;SAAI;QACD,OAAM;YACF,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,IAAI,EAAE,CAAC,MAAA,OAAO,CAAC,IAAI,mCAAI,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,GAAG,EAAE,CAAC;YACvD,IAAI,EAAE,MAAA,OAAO,CAAC,IAAI,mCAAI,EAAE;YACxB,KAAK,EAAE,CAAC,MAAA,OAAO,CAAC,KAAK,mCAAI,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,GAAG,EAAE,CAAC;YACzD,IAAI,EAAE,CAAC,MAAA,OAAO,CAAC,IAAI,mCAAI,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,GAAG,EAAE,CAAC;YACvD,EAAE,EAAE,CAAC,MAAA,OAAO,CAAC,EAAE,mCAAI,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAC,IAAI,GAAG,EAAE,CAAC;YACnD,KAAK,EAAE,MAAA,OAAO,CAAC,KAAK,mCAAI,EAAE;SAC7B,CAAA;KACJ;AACL,CAAC","sourcesContent":["export type DataObject = {\r\n    type: string,\r\n    name: string,\r\n    size: string,\r\n    label: string,\r\n    hint: string,\r\n    id: string,\r\n    value: string,\r\n}\r\n\r\nexport function createDataObject(element: any, iter?: number): DataObject {\r\n    if(iter == null){\r\n        return{\r\n            type: element.type,\r\n            name: element.name ?? \"\",\r\n            size: element.size ?? \"\",\r\n            label: element.label ?? \"\",\r\n            hint: element.hint ?? \"\",\r\n            id: element.id ?? \"\",\r\n            value: element.value ?? \"\"\r\n        }\r\n    }else{\r\n        return{\r\n            type: element.type,\r\n            name: (element.name ?? \"\").replace(/{iter}/g,iter + \"\"),\r\n            size: element.size ?? \"\",\r\n            label: (element.label ?? \"\").replace(/{iter}/g,iter + \"\"),\r\n            hint: (element.hint ?? \"\").replace(/{iter}/g,iter + \"\"),\r\n            id: (element.id ?? \"\").replace(/{iter}/g,iter + \"\"),\r\n            value: element.value ?? \"\"\r\n        }\r\n    }\r\n}\r\n\r\n"]}